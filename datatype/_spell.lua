--- @class spell
--- @field public AERange float AE range (group spells use this for their range)
--- @field public CastOnAnother fun(): string Message when cast on others
--- @field public CastOnYou fun(): string Message when cast on yourself
--- @field public CastTime timestamp Cast time (unadjusted)
--- @field public CounterType fun(): string The resist counter. Will be one of "Disease", "Poison", "Curse" or "Corruption"
--- @field public CounterNumber fun(): integer The number of counters that the spell adds
--- @field public Duration ticks Duration of the spell (if any)
--- @field public DurationValue1 ticks Duration of the spell (if any)
--- @field public FizzleTime timestamp Time to recover after fizzle
--- @field public GemIcon fun(): integer Icon number of the spell. Exmaple ${Spell[blah].GemIcon}
--- @field public HastePct MQFloat #Percentage of haste, example of use ${Me.Hasted.HastePct} or ${Spell[Speed of Milyex].HastePct}
--- @field public ID number Spell ID
--- @field public IsSkill fun(): boolean is this spell a skill?
--- @field public IsSwarmSpell fun(): boolean Is this spell a Swarm spell?
--- @field public Level fun(): integer Level
--- @field public Location MQFloat #Appears to be max distance
--- @field public Mana fun(): integer Mana cost (unadjusted)
--- @field public MyCastTime timestamp Adjusted cast time
--- @field public MyRange float Adjusted spell range, including focus effects, etc.
--- @field public Name fun(): string Spell Name
--- @field public PushBack float Push back amount
--- @field public Range float Maximum range to target (use AERange for AE and group spells)
--- @field public Rank fun(): integer Returns either 1, 2 or 3 for spells and 4-30 for clickys and potions.
--- @field public RankName fun(): string Returns the spell/combat ability name rank character has.
--- @field public ReagentCount fun(): integer Number of reagents used for this spell
--- @field public ReagentID fun(): integer ID of the reagent item used for this spell
--- @field public RecastTime MQFloat #Time to recast after successful cast
--- @field public RecoveryTime timestamp Same as FizzleTime
--- @field public ResistAdj fun(): integer Resist adjustment
--- @field public ResistType fun(): string See below for Resist Types
--- @field public Skill fun(): string See below for Skill Types
--- @field public SlowPct MQFloat #Percentage of slow, example of use ${Target.Slowed.SlowPct} or ${Spell[Slowing Helix].SlowPct}
--- @field public SpellIcon fun(): integer Icon number of the spell. Exmaple ${Spell[blah].SpellIcon}
--- @field public SpellType fun(): string The spell type, Will be one of "Beneficial(Group)", "Beneficial", "Detrimental" or "Unknown"
--- @field public Stacks fun(): boolean Does the selected spell stack with your current buffs (duration is in ticks)
--- @field public StacksPet fun(): boolean Does the selected spell stack with your pet's current buffs (duration is in ticks)
--- @field public StacksTarget fun(): boolean Does the selected spell stack with your target's current buffs (duration is in ticks)
--- @field public StacksWith fun(): boolean alias for .WillStack - see entry for more details
--- @field public NewStacks fun(): boolean see entry for more details
--- @field public TargetType fun(): string See below for Target Types
--- @field public WearOff fun(): string The "wear off" message
--- @field public WillStack fun(name: string): boolean Does the selected spell stack with the specific SPELL nameDOES NOT work with AAs.
--- @field public ToString fun(): string Same as Name