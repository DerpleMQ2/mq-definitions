--- @class item
--- @field public AC fun(): number AC value on item
--- @field public AGI fun(): number AGI value on item
--- @field public Accuracy fun(): number Accuracy
--- @field public Attack fun(): number Attack value on item
--- @field public Attuneable fun(): boolean Attuneable?
--- @field public AugRestrictions fun(): number Augment Restrictions
--- @field public Augs fun(): number Number of augs on this item
--- @field public AugSlot1 fun(): number Aug slot 1
--- @field public AugSlot2 fun(): number Aug slot 2
--- @field public AugSlot3 fun(): number Aug slot 3
--- @field public AugSlot4 fun(): number Aug slot 4
--- @field public AugSlot5 fun(): number Aug slot 5
--- @field public AugType fun(): number Augment Type
--- @field public Avoidance fun(): number Avoidance
--- @field public BuyPrice fun(): number The cost to buy this item from active merchant
--- @field public CastTime float Spell effect's cast time (in seconds)
--- @field public CHA fun(): number CHA value on item
--- @field public Charges fun(): number Charges
--- @field public Clairvoyance fun(): number Clairvoyance
--- @field public Class fun(): string Returns the #th long class name of the listed classes on an item. Items suitable for ALL classes will effectively have all 17 classes listed.
--- @field public Classes fun(): number The number of classes that can use the item. Items suitable for ALL classes will return 16.
--- @field public Clicky itemspell Activatable spell effect, if any.
--- @field public CombatEffects fun(): number CombatEffects
--- @field public Container fun(): number Number of slots, if this is a container
--- @field public DamageShieldMitigation fun(): number Damage Shield Mitigation
--- @field public DamShield fun(): number Damage Shield value on item
--- @field public Deity fun(): string Returns the #th deity of the listed deities on an item. Items with no deity restrictions will return NULL for all values of #.
--- @field public Deities fun(): number The number of deities that can use the item. Items with no deity restrictions will return 0.
--- @field public DEX fun(): number DEX value on item
--- @field public DMGBonusType fun(): string "None", "Magic", "Fire", "Cold", "Poison", "Disease"
--- @field public DoTShielding fun(): number DoT Shielding
--- @field public EffectType fun(): string Spell effect type (see below for spell effect types)
--- @field public Endurance fun(): number Endurance
--- @field public EnduranceRegen fun(): number Endurance regen
--- @field public Evolving evolving Does this item have Evolving experience on?
--- @field public FreeStack fun(): number The number of items needed to fill all the stacks of the item you have (with a stacksize of 20).If you have 3 stacks (1, 10, 20 in those stacks), you have room for 60 total and you have 31 on you, so FreeStack would return 29.
--- @field public Haste fun(): number Haste value on item
--- @field public HealAmount fun(): number HealAmount (regen?)
--- @field public HeroicAGI fun(): number Heroic AGI value on item
--- @field public HeroicCHA fun(): number Heroic CHA value on item
--- @field public HeroicDEX fun(): number Heroic DEX value on item
--- @field public HeroicINT fun(): number Heroic INT value on item
--- @field public HeroicSTA fun(): number Heroic STA value on item
--- @field public HeroicSTR fun(): number Heroic STR value on item
--- @field public HeroicSvCold fun(): number Heroic SvCold value on item
--- @field public HeroicSvCorruption fun(): number Heroic SvCorruption value on item
--- @field public HeroicSvDisease fun(): number Heroic SvDisease value on item
--- @field public HeroicSvFire fun(): number Heroic SvFire value on item
--- @field public HeroicSvMagic fun(): number Heroic SvMagic value on item
--- @field public HeroicSvPoison fun(): number Heroic SvPoison value on item
--- @field public HeroicWIS fun(): number Heroic WIS value on item
--- @field public HP fun(): number HP value on item
--- @field public HPRegen fun(): number HPRegen value on item
--- @field public Icon fun(): number Item Icon
--- @field public ID fun(): number Item ID
--- @field public InstrumentMod float Instrument Modifier Value
--- @field public INT fun(): number INT value on item
--- @field public InvSlot fun(): number Inventory Slot Number (Historic and now deprecated, use ItemSlot and ItemSlot2)
--- @field public Item item Item in #th slot, if this is a container or has augs
--- @field public ItemDelay float Returns the delay of the weapon
--- @field public ItemLink item just prints the actual hexlink for an item (not clickable) unless [CLICKABLE] is included
--- @field public Items fun(): number Number of items, if this is a container.
--- @field public ItemSlot fun(): number Item Slot number see Slot Names
--- @field public ItemSlot2 fun(): number Item Slot sub number see Slot Names
--- @field public LDoNTheme fun(): string "All", "Deepest Guk", "Miragul's", "Mistmoore", "Rujarkian", "Takish", "Unknown"
--- @field public Lore fun(): boolean Lore?
--- @field public Magic fun(): boolean Magic?
--- @field public Mana fun(): number Mana value on item
--- @field public ManaRegen fun(): number ManaRegen value on item
--- @field public MaxPower fun(): number Max power on an power source
--- @field public MerchQuantity fun(): number Quantity of item active merchant has
--- @field public Name fun(): string Name
--- @field public NoDrop fun(): boolean No Trade?
--- @field public NoRent fun(): boolean Temporary?
--- @field public Power fun(): number Power left on power source
--- @field public Purity fun(): number Purity of item
--- @field public Race fun(): string Returns the #th long race name of the listed races on an item. Items suitable for ALL races will effectively have all 15 races listed.
--- @field public Races fun(): number The number of races that can use the item. Items suitable for ALL races will return 15.
--- @field public RequiredLevel fun(): number Returns the Required Level of an item. Items with no required level will return 0.
--- @field public SellPrice fun(): number Price to sell this item at this merchant
--- @field public Shielding fun(): number Shielding
--- @field public Size fun(): number Item size:1 SMALL2 MEDIUM3 LARGE4 GIANT
--- @field public SizeCapacity fun(): number If item is a container, size of items it can hold:1 SMALL2 MEDIUM3 LARGE4 GIANT
--- @field public Spell spell Spell effect
--- @field public SpellDamage fun(): number Spell damage
--- @field public SpellShield fun(): number SpellShield
--- @field public STA fun(): number STA value on item
--- @field public Stack fun(): number Number of items in the stack
--- @field public Stacks fun(): number Number of stacks of the item in your inventory
--- @field public Stackable fun(): boolean Stackable?
--- @field public StackCount fun(): number The total number of the stackable item in your inventory
--- @field public StackSize fun(): number Maximum number if items that can be in the stack
--- @field public STR fun(): number STR value on item
--- @field public StrikeThrough fun(): number StrikeThrough
--- @field public StunResist fun(): number Stun resist
--- @field public svCold fun(): number svCold value on item
--- @field public svCorruption fun(): number svCorruption value on item
--- @field public svDisease fun(): number svDisease value on item
--- @field public svFire fun(): number svFire value on item
--- @field public svMagic fun(): number svMagic value on item
--- @field public svPoison fun(): number svPoison value on item
--- @field public Timer ticks Returns the number of ticks remaining on an item recast timer
--- @field public TimerReady fun(): number Returns the number of seconds remaining on an item recast timer
--- @field public Tradeskills fun(): boolean Tradeskills?
--- @field public Type fun(): string Type
--- @field public Tribute fun(): number Tribute value of the item
--- @field public Value fun(): number Item value in coppers
--- @field public Weight fun(): number Item weight
--- @field public WIS fun(): number WIS value on item
--- @field public WornSlot invslot The #th invslot this item can be worn in (fingers/ears count as 2 slots)
----@field public WornSlot fun(): boolean Can item be worn in invslot with this name? (worn slots only)
--- @field public WornSlots fun(): number The number of invslots this item can be worn in (fingers/ears count as 2 slots)
--- @field public ToString fun(): string Same as Name